{"ast":null,"code":"import _defineProperty from\"C:/Users/15149/shop/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/15149/shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/15149/shop/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useState}from'react';import{PRODUCTS}from\"../products\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ShopContext=/*#__PURE__*/createContext(null);var getDefaultCart=function getDefaultCart(){var cart={};for(var i=1;i<PRODUCTS.length+1;i++){cart[i]=0;}return cart;};export var ShopContextProvider=function ShopContextProvider(props){var _useState=useState(getDefaultCart()),_useState2=_slicedToArray(_useState,2),cartItems=_useState2[0],setCartItems=_useState2[1];var getTotalCartAmount=function getTotalCartAmount(){var totalAmount=0;var _loop=function _loop(item){if(cartItems[item]>0){var iteminfo=PRODUCTS.find(function(product){return product.id===Number(item);});totalAmount+=cartItems[item]*iteminfo.price;}};for(var item in cartItems){_loop(item);}return totalAmount;};var addToCart=function addToCart(itemId){setCartItems(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},itemId,prev[itemId]+1));});};var removeFromCart=function removeFromCart(itemId){setCartItems(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},itemId,prev[itemId]-1));});};var updateCartItemCount=function updateCartItemCount(newAmount,itemId){setCartItems(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},itemId,newAmount));});};var contextValue={cartItems:cartItems,addToCart:addToCart,removeFromCart:removeFromCart,updateCartItemCount:updateCartItemCount,getTotalCartAmount:getTotalCartAmount};console.log(cartItems);return/*#__PURE__*/_jsx(ShopContext.Provider,{value:contextValue,children:props.children});};","map":{"version":3,"names":["React","createContext","useState","PRODUCTS","jsx","_jsx","ShopContext","getDefaultCart","cart","i","length","ShopContextProvider","props","_useState","_useState2","_slicedToArray","cartItems","setCartItems","getTotalCartAmount","totalAmount","_loop","item","iteminfo","find","product","id","Number","price","addToCart","itemId","prev","_objectSpread","_defineProperty","removeFromCart","updateCartItemCount","newAmount","contextValue","console","log","Provider","value","children"],"sources":["C:/Users/15149/shop/src/context/shop-context.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\nimport { PRODUCTS } from \"../products\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n    let cart = {}\r\n    for (let i = 1; i < PRODUCTS.length + 1; i++){\r\n        cart[i] = 0;\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const ShopContextProvider = (props) => {\r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    const getTotalCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const item in cartItems) {\r\n            if (cartItems[item] > 0) {\r\n                let iteminfo= PRODUCTS.find((product) => product.id === Number(item));\r\n                totalAmount += cartItems[item] * iteminfo.price\r\n            }\r\n        }\r\n\r\n        return totalAmount;\r\n    };\r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({...prev, [itemId]: prev[itemId] + 1 }));\r\n    };\r\n\r\n    const removeFromCart = (itemId) => {\r\n        setCartItems((prev) => ({...prev, [itemId]: prev[itemId] - 1 }));\r\n    };\r\n\r\n    const updateCartItemCount = (newAmount, itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));\r\n    }\r\n\r\n    const contextValue = { cartItems, addToCart, removeFromCart, updateCartItemCount, getTotalCartAmount };\r\n    console.log(cartItems);\r\n\r\n    return (\r\n\r\n    <ShopContext.Provider value={contextValue}>\r\n        {props.children}\r\n        </ShopContext.Provider>\r\n\r\n    ); \r\n};"],"mappings":"4TAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CACtD,OAASC,QAAQ,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,MAAO,IAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,IAAI,CAAC,CAE9C,GAAM,CAAAM,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CACzB,GAAI,CAAAC,IAAI,CAAG,CAAC,CAAC,CACb,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGN,QAAQ,CAACO,MAAM,CAAG,CAAC,CAAED,CAAC,EAAE,CAAC,CACzCD,IAAI,CAACC,CAAC,CAAC,CAAG,CAAC,CACf,CACA,MAAO,CAAAD,IAAI,CACf,CAAC,CAED,MAAO,IAAM,CAAAG,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAIC,KAAK,CAAK,CAC1C,IAAAC,SAAA,CAAkCX,QAAQ,CAACK,cAAc,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArDG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,GAAM,CAAAI,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC7B,GAAI,CAAAC,WAAW,CAAG,CAAC,CAAC,IAAAC,KAAA,UAAAA,MAAAC,IAAA,CACU,CAC1B,GAAIL,SAAS,CAACK,IAAI,CAAC,CAAG,CAAC,CAAE,CACrB,GAAI,CAAAC,QAAQ,CAAEnB,QAAQ,CAACoB,IAAI,CAAC,SAACC,OAAO,QAAK,CAAAA,OAAO,CAACC,EAAE,GAAKC,MAAM,CAACL,IAAI,CAAC,GAAC,CACrEF,WAAW,EAAIH,SAAS,CAACK,IAAI,CAAC,CAAGC,QAAQ,CAACK,KAAK,CACnD,CACJ,CAAC,CALD,IAAK,GAAM,CAAAN,IAAI,GAAI,CAAAL,SAAS,EAAAI,KAAA,CAAAC,IAAA,GAO5B,MAAO,CAAAF,WAAW,CACtB,CAAC,CAED,GAAM,CAAAS,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,MAAM,CAAK,CAC1BZ,YAAY,CAAC,SAACa,IAAI,SAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,KAAAE,eAAA,IAAGH,MAAM,CAAGC,IAAI,CAACD,MAAM,CAAC,CAAG,CAAC,IAAG,CAAC,CACpE,CAAC,CAED,GAAM,CAAAI,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIJ,MAAM,CAAK,CAC/BZ,YAAY,CAAC,SAACa,IAAI,SAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,KAAAE,eAAA,IAAGH,MAAM,CAAGC,IAAI,CAACD,MAAM,CAAC,CAAG,CAAC,IAAG,CAAC,CACpE,CAAC,CAED,GAAM,CAAAK,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAIC,SAAS,CAAEN,MAAM,CAAK,CAC/CZ,YAAY,CAAC,SAACa,IAAI,SAAAC,aAAA,CAAAA,aAAA,IAAWD,IAAI,KAAAE,eAAA,IAAGH,MAAM,CAAGM,SAAS,IAAG,CAAC,CAC9D,CAAC,CAED,GAAM,CAAAC,YAAY,CAAG,CAAEpB,SAAS,CAATA,SAAS,CAAEY,SAAS,CAATA,SAAS,CAAEK,cAAc,CAAdA,cAAc,CAAEC,mBAAmB,CAAnBA,mBAAmB,CAAEhB,kBAAkB,CAAlBA,kBAAmB,CAAC,CACtGmB,OAAO,CAACC,GAAG,CAACtB,SAAS,CAAC,CAEtB,mBAEAX,IAAA,CAACC,WAAW,CAACiC,QAAQ,EAACC,KAAK,CAAEJ,YAAa,CAAAK,QAAA,CACrC7B,KAAK,CAAC6B,QAAQ,EACQ,CAG/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}